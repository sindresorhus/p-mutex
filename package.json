{
	"name": "p-mutex",
	"version": "1.0.0",
	"description": "Async mutex lock for managing access to a shared resource",
	"license": "MIT",
	"repository": "sindresorhus/p-mutex",
	"funding": "https://github.com/sponsors/sindresorhus",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "https://sindresorhus.com"
	},
	"type": "module",
	"exports": {
		"types": "./index.d.ts",
		"default": "./index.js"
	},
	"sideEffects": false,
	"engines": {
		"node": ">=20"
	},
	"scripts": {
		"test": "xo && ava && tsc index.d.ts"
	},
	"files": [
		"index.js",
		"index.d.ts"
	],
	"keywords": [
		"promise",
		"lock",
		"mutex",
		"mutual",
		"exclusion",
		"async",
		"await",
		"semaphore",
		"sema",
		"locking",
		"wait",
		"race",
		"promises",
		"concurrently",
		"concurrency",
		"parallel",
		"resource",
		"guard"
	],
	"dependencies": {
		"yocto-queue": "^1.2.1"
	},
	"devDependencies": {
		"ava": "^6.4.0",
		"typescript": "^5.8.3",
		"xo": "^0.60.0"
	}
}
